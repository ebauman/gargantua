// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: hobbyfarm/dynamicbindrequest_service.proto

package protobuf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DynamicBindRequestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynamicBindRequests []*DynamicBindRequest `protobuf:"bytes,1,rep,name=DynamicBindRequests,proto3" json:"DynamicBindRequests,omitempty"`
}

func (x *DynamicBindRequestList) Reset() {
	*x = DynamicBindRequestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hobbyfarm_dynamicbindrequest_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicBindRequestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicBindRequestList) ProtoMessage() {}

func (x *DynamicBindRequestList) ProtoReflect() protoreflect.Message {
	mi := &file_hobbyfarm_dynamicbindrequest_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicBindRequestList.ProtoReflect.Descriptor instead.
func (*DynamicBindRequestList) Descriptor() ([]byte, []int) {
	return file_hobbyfarm_dynamicbindrequest_service_proto_rawDescGZIP(), []int{0}
}

func (x *DynamicBindRequestList) GetDynamicBindRequests() []*DynamicBindRequest {
	if x != nil {
		return x.DynamicBindRequests
	}
	return nil
}

var File_hobbyfarm_dynamicbindrequest_service_proto protoreflect.FileDescriptor

var file_hobbyfarm_dynamicbindrequest_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x68, 0x6f, 0x62, 0x62, 0x79, 0x66, 0x61, 0x72, 0x6d, 0x2f, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x62, 0x69, 0x6e, 0x64, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x68, 0x6f, 0x62, 0x62,
	0x79, 0x66, 0x61, 0x72, 0x6d, 0x2f, 0x68, 0x6f, 0x62, 0x62, 0x79, 0x66, 0x61, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x16, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x13, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x13, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x32, 0xb4, 0x03, 0x0a, 0x19, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x62, 0x69, 0x6e, 0x64, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x49, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x03, 0x2e, 0x49, 0x44, 0x1a, 0x13,
	0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x62, 0x69, 0x6e, 0x64,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x12, 0x5a, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x62, 0x69, 0x6e, 0x64, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x1a, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x62, 0x69, 0x6e, 0x64, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x2f, 0x7b, 0x4e, 0x61, 0x6d, 0x65, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x3f, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x03, 0x2e, 0x49, 0x44, 0x1a, 0x06, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x62, 0x69, 0x6e, 0x64,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x7b, 0x49, 0x44, 0x7d, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6f, 0x62, 0x62,
	0x79, 0x66, 0x61, 0x72, 0x6d, 0x2f, 0x67, 0x61, 0x72, 0x67, 0x61, 0x6e, 0x74, 0x75, 0x61, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hobbyfarm_dynamicbindrequest_service_proto_rawDescOnce sync.Once
	file_hobbyfarm_dynamicbindrequest_service_proto_rawDescData = file_hobbyfarm_dynamicbindrequest_service_proto_rawDesc
)

func file_hobbyfarm_dynamicbindrequest_service_proto_rawDescGZIP() []byte {
	file_hobbyfarm_dynamicbindrequest_service_proto_rawDescOnce.Do(func() {
		file_hobbyfarm_dynamicbindrequest_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_hobbyfarm_dynamicbindrequest_service_proto_rawDescData)
	})
	return file_hobbyfarm_dynamicbindrequest_service_proto_rawDescData
}

var file_hobbyfarm_dynamicbindrequest_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_hobbyfarm_dynamicbindrequest_service_proto_goTypes = []interface{}{
	(*DynamicBindRequestList)(nil), // 0: DynamicBindRequestList
	(*DynamicBindRequest)(nil),     // 1: DynamicBindRequest
	(*Empty)(nil),                  // 2: Empty
	(*ID)(nil),                     // 3: ID
}
var file_hobbyfarm_dynamicbindrequest_service_proto_depIdxs = []int32{
	1, // 0: DynamicBindRequestList.DynamicBindRequests:type_name -> DynamicBindRequest
	2, // 1: DynamicBindRequestService.List:input_type -> Empty
	3, // 2: DynamicBindRequestService.Get:input_type -> ID
	1, // 3: DynamicBindRequestService.Create:input_type -> DynamicBindRequest
	1, // 4: DynamicBindRequestService.Update:input_type -> DynamicBindRequest
	3, // 5: DynamicBindRequestService.Delete:input_type -> ID
	0, // 6: DynamicBindRequestService.List:output_type -> DynamicBindRequestList
	1, // 7: DynamicBindRequestService.Get:output_type -> DynamicBindRequest
	1, // 8: DynamicBindRequestService.Create:output_type -> DynamicBindRequest
	1, // 9: DynamicBindRequestService.Update:output_type -> DynamicBindRequest
	2, // 10: DynamicBindRequestService.Delete:output_type -> Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_hobbyfarm_dynamicbindrequest_service_proto_init() }
func file_hobbyfarm_dynamicbindrequest_service_proto_init() {
	if File_hobbyfarm_dynamicbindrequest_service_proto != nil {
		return
	}
	file_hobbyfarm_hobbyfarm_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hobbyfarm_dynamicbindrequest_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicBindRequestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hobbyfarm_dynamicbindrequest_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hobbyfarm_dynamicbindrequest_service_proto_goTypes,
		DependencyIndexes: file_hobbyfarm_dynamicbindrequest_service_proto_depIdxs,
		MessageInfos:      file_hobbyfarm_dynamicbindrequest_service_proto_msgTypes,
	}.Build()
	File_hobbyfarm_dynamicbindrequest_service_proto = out.File
	file_hobbyfarm_dynamicbindrequest_service_proto_rawDesc = nil
	file_hobbyfarm_dynamicbindrequest_service_proto_goTypes = nil
	file_hobbyfarm_dynamicbindrequest_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DynamicBindRequestServiceClient is the client API for DynamicBindRequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DynamicBindRequestServiceClient interface {
	List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DynamicBindRequestList, error)
	Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*DynamicBindRequest, error)
	Create(ctx context.Context, in *DynamicBindRequest, opts ...grpc.CallOption) (*DynamicBindRequest, error)
	Update(ctx context.Context, in *DynamicBindRequest, opts ...grpc.CallOption) (*DynamicBindRequest, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Empty, error)
}

type dynamicBindRequestServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDynamicBindRequestServiceClient(cc grpc.ClientConnInterface) DynamicBindRequestServiceClient {
	return &dynamicBindRequestServiceClient{cc}
}

func (c *dynamicBindRequestServiceClient) List(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*DynamicBindRequestList, error) {
	out := new(DynamicBindRequestList)
	err := c.cc.Invoke(ctx, "/DynamicBindRequestService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicBindRequestServiceClient) Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*DynamicBindRequest, error) {
	out := new(DynamicBindRequest)
	err := c.cc.Invoke(ctx, "/DynamicBindRequestService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicBindRequestServiceClient) Create(ctx context.Context, in *DynamicBindRequest, opts ...grpc.CallOption) (*DynamicBindRequest, error) {
	out := new(DynamicBindRequest)
	err := c.cc.Invoke(ctx, "/DynamicBindRequestService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicBindRequestServiceClient) Update(ctx context.Context, in *DynamicBindRequest, opts ...grpc.CallOption) (*DynamicBindRequest, error) {
	out := new(DynamicBindRequest)
	err := c.cc.Invoke(ctx, "/DynamicBindRequestService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dynamicBindRequestServiceClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DynamicBindRequestService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DynamicBindRequestServiceServer is the server API for DynamicBindRequestService service.
type DynamicBindRequestServiceServer interface {
	List(context.Context, *Empty) (*DynamicBindRequestList, error)
	Get(context.Context, *ID) (*DynamicBindRequest, error)
	Create(context.Context, *DynamicBindRequest) (*DynamicBindRequest, error)
	Update(context.Context, *DynamicBindRequest) (*DynamicBindRequest, error)
	Delete(context.Context, *ID) (*Empty, error)
}

// UnimplementedDynamicBindRequestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDynamicBindRequestServiceServer struct {
}

func (*UnimplementedDynamicBindRequestServiceServer) List(context.Context, *Empty) (*DynamicBindRequestList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedDynamicBindRequestServiceServer) Get(context.Context, *ID) (*DynamicBindRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDynamicBindRequestServiceServer) Create(context.Context, *DynamicBindRequest) (*DynamicBindRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedDynamicBindRequestServiceServer) Update(context.Context, *DynamicBindRequest) (*DynamicBindRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDynamicBindRequestServiceServer) Delete(context.Context, *ID) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterDynamicBindRequestServiceServer(s *grpc.Server, srv DynamicBindRequestServiceServer) {
	s.RegisterService(&_DynamicBindRequestService_serviceDesc, srv)
}

func _DynamicBindRequestService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicBindRequestServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DynamicBindRequestService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicBindRequestServiceServer).List(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicBindRequestService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicBindRequestServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DynamicBindRequestService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicBindRequestServiceServer).Get(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicBindRequestService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynamicBindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicBindRequestServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DynamicBindRequestService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicBindRequestServiceServer).Create(ctx, req.(*DynamicBindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicBindRequestService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DynamicBindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicBindRequestServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DynamicBindRequestService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicBindRequestServiceServer).Update(ctx, req.(*DynamicBindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DynamicBindRequestService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DynamicBindRequestServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DynamicBindRequestService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DynamicBindRequestServiceServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _DynamicBindRequestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DynamicBindRequestService",
	HandlerType: (*DynamicBindRequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _DynamicBindRequestService_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DynamicBindRequestService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _DynamicBindRequestService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DynamicBindRequestService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DynamicBindRequestService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hobbyfarm/dynamicbindrequest_service.proto",
}
